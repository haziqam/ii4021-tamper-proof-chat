// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username    String
  password    String
  publicKey   String
  chatroomIds String[] @default([]) @db.ObjectId

  @@unique(username)
}

model Chatroom {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  userIds   String[]     @db.ObjectId
  members   PublicUser[]
  createdAt DateTime     @default(now()) @db.Timestamp
  pages     ChatPage[]

  @@unique(userIds)
}

model ChatPage {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  pageSequence   Int
  isLastSequence Boolean   @default(true)
  messageCount   Int       @default(0)
  messages       Message[]
  chatroomId     String    @db.ObjectId
  Chatroom       Chatroom  @relation(fields: [chatroomId], references: [id])

  @@unique([chatroomId, pageSequence])
  @@unique([chatroomId, isLastSequence])
}

type Message {
  senderUsername   String
  receiverUsername String
  message          String
  sentAt           DateTime
  messageHash      String
  signature        Signature
}

type Signature {
  r String
  s String
}

type PublicUser {
  username  String
  publicKey String
}
